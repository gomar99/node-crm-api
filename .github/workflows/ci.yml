name: Node.js CI/CD (No Deploy)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: crm_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Wait for Postgres
        run: |
          until pg_isready -h postgres -p 5432 -U postgres; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Create tables
        run: |
          psql postgres://postgres:postgres@postgres:5432/crm_test -c "
          CREATE TABLE IF NOT EXISTS users (
            id serial PRIMARY KEY,
            name varchar(100) NOT NULL,
            email varchar(150) UNIQUE NOT NULL,
            created_at timestamp DEFAULT CURRENT_TIMESTAMP
          );"

      - name: Seed database
        run: node scripts/seedUsers.js
        env:
          NODE_ENV: test
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/crm_test

      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/crm_test

  build-and-push:
    needs: test-build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: devgoku69/node-crm-api:latest
